{"ast":null,"code":"var _jsxFileName = \"/Users/faarisismail/GitHub/WAtSCE/scheduler/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './App.css';\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport { getAuth, signInWithPopup, GoogleAuthProvider } from \"firebase/auth\";\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDny8PAsKPiFPsdp8ml7M4xlu-XLwsNjgM\",\n  authDomain: \"cs1980.firebaseapp.com\",\n  projectId: \"cs1980\",\n  storageBucket: \"cs1980.appspot.com\",\n  messagingSenderId: \"725657314446\",\n  appId: \"1:725657314446:web:46e71dc4e4ddcccc0515df\",\n  measurementId: \"G-L36F0RL44J\"\n};\nconst app = initializeApp(firebaseConfig);\nconst analytics = getAnalytics(app);\nconst auth = getAuth();\n\nfunction App() {\n  _s();\n\n  const [user] = useAuthState(auth);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: user ? /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(SignIn, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 28\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"hP/7NvzUIXfxIpRVjMlmHSnysKo=\", false, function () {\n  return [useAuthState];\n});\n\n_c = App;\n\nfunction SignIn() {\n  const signInWithGoogle = () => {\n    const provider = new GoogleAuthProvider();\n    signInWithPopup(auth, provider).then(result => {\n      // This gives you a Google Access Token. You can use it to access the Google API.\n      const credential = GoogleAuthProvider.credentialFromResult(result);\n      const token = credential.accessToken; // The signed-in user info.\n\n      const user = result.user; // ...\n    }).catch(error => {\n      // Handle Errors here.\n      const errorCode = error.code;\n      const errorMessage = error.message; // The email of the user's account used.\n\n      const email = error.email; // The AuthCredential type that was used.\n\n      const credential = GoogleAuthProvider.credentialFromError(error); // ...\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"sign-in\",\n      onClick: signInWithGoogle,\n      children: \"Sign in with Google\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_c2 = SignIn;\n\nfunction Main() {}\n\n_c3 = Main;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"SignIn\");\n$RefreshReg$(_c3, \"Main\");","map":{"version":3,"sources":["/Users/faarisismail/GitHub/WAtSCE/scheduler/src/App.js"],"names":["React","initializeApp","getAnalytics","getAuth","signInWithPopup","GoogleAuthProvider","useAuthState","useCollectionData","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","analytics","auth","App","user","SignIn","signInWithGoogle","provider","then","result","credential","credentialFromResult","token","accessToken","catch","error","errorCode","code","errorMessage","message","email","credentialFromError","Main"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AAEA,SAASC,aAAT,QAA8B,cAA9B;AACA,SAASC,YAAT,QAA6B,oBAA7B;AACA,SAASC,OAAT,EAAkBC,eAAlB,EAAmCC,kBAAnC,QAA6D,eAA7D;AACA,SAASC,YAAT,QAA6B,2BAA7B;AACA,SAASC,iBAAT,QAAkC,gCAAlC;;;AAIA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,MAAM,EAAE,yCADa;AAErBC,EAAAA,UAAU,EAAE,wBAFS;AAGrBC,EAAAA,SAAS,EAAE,QAHU;AAIrBC,EAAAA,aAAa,EAAE,oBAJM;AAKrBC,EAAAA,iBAAiB,EAAE,cALE;AAMrBC,EAAAA,KAAK,EAAE,2CANc;AAOrBC,EAAAA,aAAa,EAAE;AAPM,CAAvB;AAUA,MAAMC,GAAG,GAAGf,aAAa,CAACO,cAAD,CAAzB;AACA,MAAMS,SAAS,GAAGf,YAAY,CAACc,GAAD,CAA9B;AACA,MAAME,IAAI,GAAGf,OAAO,EAApB;;AAKA,SAASgB,GAAT,GAAe;AAAA;;AAGb,QAAM,CAACC,IAAD,IAASd,YAAY,CAACY,IAAD,CAA3B;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,gBACGE,IAAI,gBAAG,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cAAH,gBAAc,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADrB;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GAfQD,G;UAGQb,Y;;;KAHRa,G;;AAiBT,SAASE,MAAT,GAAkB;AAChB,QAAMC,gBAAgB,GAAG,MAAM;AAC7B,UAAMC,QAAQ,GAAG,IAAIlB,kBAAJ,EAAjB;AACAD,IAAAA,eAAe,CAACc,IAAD,EAAOK,QAAP,CAAf,CACDC,IADC,CACKC,MAAD,IAAY;AAChB;AACA,YAAMC,UAAU,GAAGrB,kBAAkB,CAACsB,oBAAnB,CAAwCF,MAAxC,CAAnB;AACA,YAAMG,KAAK,GAAGF,UAAU,CAACG,WAAzB,CAHgB,CAIhB;;AACA,YAAMT,IAAI,GAAGK,MAAM,CAACL,IAApB,CALgB,CAMhB;AACD,KARC,EAQCU,KARD,CAQQC,KAAD,IAAW;AAClB;AACA,YAAMC,SAAS,GAAGD,KAAK,CAACE,IAAxB;AACA,YAAMC,YAAY,GAAGH,KAAK,CAACI,OAA3B,CAHkB,CAIlB;;AACA,YAAMC,KAAK,GAAGL,KAAK,CAACK,KAApB,CALkB,CAMlB;;AACA,YAAMV,UAAU,GAAGrB,kBAAkB,CAACgC,mBAAnB,CAAuCN,KAAvC,CAAnB,CAPkB,CAQlB;AACD,KAjBC;AAkBD,GApBD;;AAsBA,sBACE;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,SAAlB;AAA4B,MAAA,OAAO,EAAET,gBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAKD;;MA5BQD,M;;AA8BT,SAASiB,IAAT,GAAgB,CAAE;;MAATA,I;AAET,eAAenB,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\n\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport { getAuth, signInWithPopup, GoogleAuthProvider } from \"firebase/auth\";\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\n\n\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDny8PAsKPiFPsdp8ml7M4xlu-XLwsNjgM\",\n  authDomain: \"cs1980.firebaseapp.com\",\n  projectId: \"cs1980\",\n  storageBucket: \"cs1980.appspot.com\",\n  messagingSenderId: \"725657314446\",\n  appId: \"1:725657314446:web:46e71dc4e4ddcccc0515df\",\n  measurementId: \"G-L36F0RL44J\"\n};\n\nconst app = initializeApp(firebaseConfig);\nconst analytics = getAnalytics(app);\nconst auth = getAuth();\n\n\n\n\nfunction App() {\n\n  \n  const [user] = useAuthState(auth);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {user ? <Main /> : <SignIn />}\n      </header>\n      <section>\n        \n      </section>\n    </div>\n  );\n}\n\nfunction SignIn() {\n  const signInWithGoogle = () => {\n    const provider = new GoogleAuthProvider();\n    signInWithPopup(auth, provider)\n  .then((result) => {\n    // This gives you a Google Access Token. You can use it to access the Google API.\n    const credential = GoogleAuthProvider.credentialFromResult(result);\n    const token = credential.accessToken;\n    // The signed-in user info.\n    const user = result.user;\n    // ...\n  }).catch((error) => {\n    // Handle Errors here.\n    const errorCode = error.code;\n    const errorMessage = error.message;\n    // The email of the user's account used.\n    const email = error.email;\n    // The AuthCredential type that was used.\n    const credential = GoogleAuthProvider.credentialFromError(error);\n    // ...\n  });\n  }\n\n  return (\n    <>\n      <button className=\"sign-in\" onClick={signInWithGoogle}>Sign in with Google</button>\n    </>\n  )\n}\n\nfunction Main() {}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}